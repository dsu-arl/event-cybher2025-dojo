#!/usr/bin/exec-suid -- /usr/bin/python3.12 -I
import stat
import random
from os import makedirs, chmod
from os.path import join, exists

random_passwords = ["Password1!", "Cr4cKm3!", "3l1t3#", "password1234", "Admin12358"]

def setup_one():

    random_words = ['brisk', 'jumpy', 'zesty', 'livid', 'quirk', 'mango', 
                    'fluff', 'gleam', 'bliss', 'vivid', 'prong', 'crisp', 
                    'swoon', 'pluck', 'charm', 'smirk', 'witty', 'glide', 
                    'sprig', 'whirl', 'buzzy', 'clamp', 'swift', 'glee', 
                    'jolly', 'flick', 'brawn', 'slink', 'twist', 'clink', 
                    'spark', 'bloom', 'frisk', 'flair', 'knack', 'scamp', 
                    'flash', 'brine', 'snare', 'sweep', 'frost', 'shard', 
                    'prick', 'flock', 'grind', 'creek', 'swoop', 'clash', 
                    'blaze', 'tweak', 'latch', 'shirk', 'blurb', 'chirp', 
                    'whizz', 'glint', 'trill', 'whisk', 'gruff', 'spunk', 
                    'twirl', 'brash', 'slick', 'gloss', 'fizz', 'snarl', 
                    'frizz', 'scuff', 'twinge', 'spurt', 'chime']

    working_dir = '/tmp/one'
    makedirs(working_dir)
    slot = random.randint(1000, 8000)
    with open(join(working_dir, 'data.txt'), 'w') as fObj:
        for x in range(0, 10000):
            if x == slot:
                fObj.write(f"Password: {random.choice(random_passwords)}\n")
            else:
                fObj.write(f"{random.choice(random_words)}\n")

    chmod('/tmp/one/data.txt', stat.S_IRUSR | stat.S_IRGRP)

    return

def setup_two():
    random_words = ['brisk', 'jumpy', 'zesty', 'livid', 'quirk', 'mango', 
                    'fluff', 'gleam', 'bliss', 'vivid', 'prong', 'crisp', 
                    'swoon', 'pluck', 'charm', 'smirk', 'witty', 'glide', 
                    'sprig', 'whirl', 'buzzy', 'clamp', 'swift', 'glee', 
                    'jolly', 'flick', 'brawn', 'slink', 'twist', 'clink', 
                    'spark', 'bloom', 'frisk', 'flair', 'knack', 'scamp', 
                    'flash', 'brine', 'snare', 'sweep', 'frost', 'shard', 
                    'prick', 'flock', 'grind', 'creek', 'swoop', 'clash', 
                    'blaze', 'tweak', 'latch', 'shirk', 'blurb', 'chirp', 
                    'whizz', 'glint', 'trill', 'whisk', 'gruff', 'spunk', 
                    'twirl', 'brash', 'slick', 'gloss', 'fizz', 'snarl', 
                    'frizz', 'scuff', 'twinge', 'spurt', 'chime']

    winning_filenames = ["chunk", "blimy", "carry", "dock"]

    working_dir = '/tmp/two'
    makedirs(working_dir)
    winning_file = random.choice(winning_filenames)
    for word in random_words:
        with open(join('/tmp/two', f"{word}.txt"), 'w+') as fObj:
            fObj.write(f"Nothing here!\n")
        chmod(join('/tmp/two', f"{word}.txt"), stat.S_IRUSR | stat.S_IRGRP)

    # Create winning file
    with open(join('/tmp/two', f"{winning_file}.txt"), 'w') as fObj:
        fObj.write("Password: 5uper_s3cr3t_pa55p4rase")
    chmod(join('/tmp/two', f"{winning_file}.txt"), stat.S_IRUSR | stat.S_IRGRP)

    return
    

def check_one():
    ans = input("What is the password inside '/tmp/one/data.txt'? ")
    for p in random_passwords:
        if p in ans:
            with open('/tmp/.one_check', 'w') as fObj:
                fObj.write("complete")
            return True

    return False

def check_two():
    ans = input("What is the name of the file that contains the password? ")
    try:
        with open(join('/tmp/two', ans), 'r') as fObj:
            data = fObj.read()
    except FileNotFoundError:
        print(f"'/tmp/two/{ans}' does not appear to exist! Try again!")
        return False

    if 'Password' in data:
        with open('/tmp/.two_check', 'w') as fObj:
            fObj.write('complete')
        return True

    return False

def print_one_instructions():
    print("""
    *** MISSION: PASSWORD RECOVERY ***

    You’ve just been recruited as a junior agent in the
    Digital Detective Agency. Your first assignment: 
    Locate a secret password buried somewhere deep inside 
    a large, mysterious file. It’s your job to track it down.

    Sometimes, these files are huge, and scrolling through
    thousands of lines isn't exactly efficient. That’s why we 
    use a powerful tool called 'grep' — it helps you search 
    for a specific string (a word or phrase) inside a file.

    Here's how you use it:
        grep {string_to_search_for} {file_to_look_in}

    Example:
        grep secret /tmp/myfile.txt

    This command will scan myfile.txt for the word "secret" and
    show the whole line where it appears. 

    Now it’s your turn. Your target file is:
        /tmp/one/data.txt

    Inside this file is a line that looks like:
        Password: {supersecretpassword}

    Your job is to find that password. When you find the correct 
    line, copy the password. Then, run:
        /challenge/solve

    Paste in the password to unlock your next instructions.
    Good luck, Agent.
    """)

def print_two_instructions():

    print("""
    *** MISSION PART TWO: THE PASSWORD FILE ***

    You've found one password... but now there’s a twist.
    This time, you’re not dealing with one huge file — you're
    facing a whole collection of files, and you have no idea
    which one is hiding the password!

    But don’t panic. You’ve still got your secret weapon: 'grep'.
    The cool thing about 'grep' is that it can search through
    **multiple files at once**. That means you don’t have to
    search each one individually.

    First, run this command to see your next target:
        ls /tmp/two

    You’ll see that the /tmp/two directory it packed with text files. 
    Somewhere in one of these files is a line that looks like this:
        Password: {supersecretpassword}

    Your mission is to find **which file** contains the password.

    To do this, you'll first need to change directories into the 
    folder with all the files:
        cd /tmp/two
    
    You also need to know a new way to use grep:
        grep {string_to_search_for} *

    That little asterisk * means "search through all files
    in the current directory."

    When 'grep' finds the target string, it will tell you exactly 
    where it came from, in this format:
        file_name: line with target string

    Once you know which file contains the password, run:
        /challenge/solve

    Then enter the filename you found to receive the flag!
    """)

def main():

    if not exists('/tmp/one'):
        setup_one()
        print_one_instructions()
        return

    if not exists('/tmp/.one_check'):
        if check_one():
            print("Congratulations! You found the password!")
        else:
            print("Oops! That wasn't quite right!")
            print_one_instructions()
            return

    if not exists('/tmp/two'):
        setup_two()
        print_two_instructions()
        return

    if not exists('/tmp/.two_check'):
        if check_two():
            print("Congratulations! You found it!")
        else:
            print("Oops! That wasn't quite right!")
            print_two_instructions()
            return

    with open('/flag', 'r') as fObj:
        print(fObj.read())

if __name__ == "__main__":
    main()

